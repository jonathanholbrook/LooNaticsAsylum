<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<addon id="context.lu"
version="20.8.29" name="   [COLORspringgreen]Loonatics [COLORpalegreen]Unleashed [COLORspringgreen]Context[/COLOR]"
provider-name="[COLORspringgreen]• [COLORpalegreen]Loonatics [COLORspringgreen]•[/COLOR]">
    <requires>
        <import addon="xbmc.python" version="2.23.0" />
    </requires>
    <extension point="kodi.context.item">
        <menu id="kodi.core.main">
            <item library="contextSettings.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - CM Settings</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.settings)) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.lu/) +
                    String.IsEqual(ListItem.Property(isLU_widget),true)
                </visible>
            </item>
            <item library="traktManager.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Trakt Manager</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.traktManager)) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.lu/) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="clearProviders.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Clear Providers</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.clearProviders)) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.lu/?action=play) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="clearBookmark.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Clear Item Bookmark</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.clearBookmark)) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.lu/?action=play) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
<!--                    !String.IsEqual(ListItem.Property(resumetime),0) + -->
                    !String.IsEqual(ListItem.Property(lu_resumetime),0) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="rescrape.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Rescrape Item</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.rescrape)) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.lu/?action=play) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="playFromHere.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Play from here</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.playFromHere)) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.lu/) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    String.IsEqual(ListItem.dbtype,episode)
                </visible>
            </item>
            <item library="autoPlay.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Auto Play</label>
                <visible>
                    String.IsEmpty(Window(home).Property(plugin.video.lu.autoPlay)) +
                    !String.IsEmpty(Window(home).Property(context.lu.autoPlay)) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.lu/?action=play) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="sourceSelect.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Source Select</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(plugin.video.lu.autoPlay)) +
                    !String.IsEmpty(Window(home).Property(context.lu.sourceSelect)) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.lu/?action=play) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="findSimilar.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Find Similar</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.findSimilar)) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.lu/) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="browseSeries.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Browse Series</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.browseSeries)) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.lu/) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
                </visible>
            </item>
            <item library="browseEpisodes.py">
                <label>[B][COLOR springgreen]LU[/COLOR][/B] - Browse Episodes</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(context.lu.browseEpisodes)) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.lu/) +
                    String.IsEqual(ListItem.Property(isLU_widget),true) +
                    String.IsEqual(ListItem.dbtype,episode)
<!--                    [String.IsEqual(ListItem.dbtype,episode) | !String.IsEmpty(ListItem.Property(multi_episodes))] -->
                </visible>
            </item>
        </menu>
</extension>
    <extension point="xbmc.service" library="service.py" />
    <extension point="xbmc.addon.metadata">
        <summary lang="en">[COLORwhite]Loonatics Unleashed Context[/COLOR]</summary>
        <description>[COLORwhite]Loonatics Unleashed Context[/COLOR]</description>
        <platform>all</platform>
        <license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
        <forum></forum>
        <website></website>
        <source></source>
        <disclaimer lang="en"></disclaimer>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.png</fanart>
        </assets>
        <news></news>
    </extension>
</addon>